-- September 24, 2019 --

select
	e.org_id as officeOid,
	o.org_name as officeNameEn,
	o.bn_org_name as officeNameBn,
	e.post_id as postOid,
	p.post_name as postNameEn,
	p.bn_post_name as postNameBn,
	e.entitlement_item_id as entitlementItem,
	its.item_name as itemGroupNameEn,
	its.bn_item_name as itemGroupNameBn,
	eq.amount as amount,
	u.abbreviation as unitEn,
	u.bn_uom_id as unitBn,
	e.type_id as entitlementType,
	et.name as entitlementTypeNameEn
from
	inventory.entitlements e,
	inventory.entitlement_types et,
	general_setup.tbl_organogram o,
	general_setup.tbl_post p,
	inventory.entitlement_items ei,
	inventory.item_setup its,
	inventory.entitlement_quantities eq,
	inventory.uom u
where
	e.org_id = o.org_id
	and e.type_id = et.id
	and e.post_id = p.post_id
	and e.entitlement_item_id = ei.id
	and ei.item_setup_id = its.id
	and e.id = eq.entitlement_id
	and eq.uom_id = u.id


export data into a csv
--
CREATE TABLE cmn.entitlement_temp (
	"oid" varchar(128) NOT NULL,
	quantity numeric(20,2) NULL,
	started_from varchar(128) NULL,
	is_deleted varchar(32) NULL,
	created_by varchar(128) NULL DEFAULT 'System'::character varying,
	created_on timestamp NULL DEFAULT CURRENT_TIMESTAMP,
	updated_by varchar(128) NULL,
	updated_on timestamp NULL,
	entitlement_type_oid varchar(128) NULL,
	office_oid varchar(128) NULL,
	post_oid varchar(128) NULL,
	item_group_oid varchar(128) NULL,
	uom_oid varchar(128) NULL,
	CONSTRAINT ck_is_deleted_entitlement CHECK ((((is_deleted)::text = 'Yes'::text) OR ((is_deleted)::text = 'No'::text))),
	CONSTRAINT pk_entitlement_temp PRIMARY KEY (oid)
);
--
and import it in the entitlement_temp table of cmn


-- September 25, 2019 --

#to update entitlement_type_oid

update
	cmn.entitlement_temp e 
set
	entitlement_type_oid = et.oid
from
	cmn.entitlement_type et
where
	e.entitlement_type_oid = upper(et.name_en);

# update office_oid

update
	cmn.entitlement_temp e 
set
	office_oid = o.oid
from
	cmn.office o
where
	e.office_oid = o.name_en;

# update post_oid

update
	cmn.entitlement_temp e 
set
	post_oid = p.oid
from
	cmn.post p
where
	e.post_oid = p.name_en;

select
	distinct post_oid
from
	cmn.entitlement_temp
order by
	post_oid asc;


delete
from
	cmn.entitlement_temp e
where
	e.post_oid not in (
'710c3d47-63a6-469d-90a6-f2c33c81f005',
'710c3d47-63a6-469d-90a6-f2c33c81f008',
'710c3d47-63a6-469d-90a6-f2c33c81f010',
'710c3d47-63a6-469d-90a6-f2c33c81f012',
'710c3d47-63a6-469d-90a6-f2c33c81f013',
'710c3d47-63a6-469d-90a6-f2c33c81f017',
'710c3d47-63a6-469d-90a6-f2c33c81f018',
'710c3d47-63a6-469d-90a6-f2c33c81f024',
'710c3d47-63a6-469d-90a6-f2c33c81f025',
'710c3d47-63a6-469d-90a6-f2c33c81f034');

update
	cmn.entitlement_temp e 
set
	created_by = 'prince';

# update item_group_oid

update
	cmn.entitlement_temp e 
set
	item_group_oid = ig.oid
from
	cmn.item_group ig
where
	trim(e.item_group_oid) = trim(ig.name_en);


update
	cmn.entitlement e 
set
	item_group_oid = '13'
where
	item_group_oid = trim('bodna');

update
	cmn.entitlement e 
set
	item_group_oid = '1'
where
	item_group_oid = 'Full Plate ';

delete
from
	cmn.entitlement_temp e
where
	e.item_group_oid in (
	'bodna',
	'Full Plate ',
	'paper shader',
	'Tea-set',
	'Tea-Set');


select
	distinct item_group_oid
from
	cmn.entitlement_temp
order by
	item_group_oid asc;

# to update uomOid

update
	cmn.entitlement_temp e 
set
	uom_oid = u.oid
from
	cmn.uom u
where
	trim(e.uom_oid) = trim(u.name_en);


select
	distinct uom_oid
from
	cmn.entitlement
order by
	uom_oid asc;

# to update quantity

update
	cmn.entitlement_temp e 
set
	quantity = 1
from
	cmn.uom u
where
	e.quantity is null;


select
	e.post_oid, e.item_group_oid
from
	cmn.entitlement_temp e
where
	entitlement_type_oid = '03'
group by 
	post_oid, item_group_oid
order by
	post_oid, item_group_oid asc;

# change office_oid
update
	cmn.entitlement
set
	office_oid = '4'
where
	office_oid = '7';
